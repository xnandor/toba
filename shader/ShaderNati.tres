[gd_resource type="CanvasItemMaterial" load_steps=2 format=1]

[sub_resource type="CanvasItemShader" id=1]

_code = {
"fragment": "float u = 1.3*UV.x - 0.15;
float v = 1.3*UV.y - 0.15;
vec2 NUV = vec2(u, v);
float edgeAlpha = 1.0;
if (NUV.x < 0 || NUV.x > 1 || NUV.y < 0 || NUV.y > 1) {
	edgeAlpha = 0.0;
}

float t = TIME/1;
uniform vec2 res; // resolution of image
vec2 uv = NUV;
vec3 c = vec3(0, 0, 0); // color
float z = t; // projected height
float colorOffset = 0.07; // default was 0.07
vec2 offset = vec2(0.66, 0.65);
vec2 p = NUV - offset; // position of center
p.x *= res.x/res.y;
float size = 1.0;
float l = size*length(p);

// INIT
float range = 0.1;
// RED
uv = NUV;
z+=colorOffset;
uv += p/l*(sin(z)+1.0) * abs(sin(l*9.0-z*2.0));
c.x = range/length( vec2(abs(mod(uv.x,1.0) - 0.5), abs(mod(uv.y,1.0) - 0.5)) );
// GREEN
uv = NUV;
z+=colorOffset;
uv += p/l*(sin(z)+1.0) * abs(sin(l*9.0-z*2.0));
c.y = range/length( vec2(abs(mod(uv.x,1.0) - 0.5), abs(mod(uv.y,1.0) - 0.5)) );
// BLUE
uv = NUV;
z+=colorOffset;
uv += p/l*(sin(z)+1.0) * abs(sin(l*9.0-z*2.0));
c.z = range/length( vec2(abs(mod(uv.x,1.0) - 0.5), abs(mod(uv.y,1.0) - 0.5)) );
float reduce = 0.9;
float fade = 1-16*pow(NUV.y-offset.y, 2);
if (fade < 0.0) {fade = 0.0;}
vec4 cp = (1.0-reduce)*vec4(c/l, 1.0);
vec4 light= vec4(cp.x, cp.y, cp.z ,fade);

// WARP
size = 1;
l = size*length(p);
uv = NUV;
z+=.07;
uv += p/l*(sin(z)+1.0) * abs(sin(l*9.0-z*2.0));
vec4 back = vec4(0.01/length( vec2(abs(mod(uv.x,1.0) - offset.x), abs(mod(uv.y,1.0) - offset.y)) ) );
float a = 0.01;
vec2 roll = vec2(NUV.x + a*sin(t+uv.x), NUV.y + a*sin(t+uv.y));
back = tex(TEXTURE, roll);
back.a = edgeAlpha;

COLOR = vec4(back.xyz+light.xyz*light.w, back.w);
",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[resource]

shader/shader = SubResource( 1 )
shader/shading_mode = 0
shader_param/res = Vector2( 4, 3 )

